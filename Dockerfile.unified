# Unified Dockerfile for all AnythingLLM services
FROM ubuntu:jammy-20240627.1

# Build arguments
ARG ARG_UID=1000
ARG ARG_GID=1000

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Install system dependencies including Python and Node.js 20
RUN DEBIAN_FRONTEND=noninteractive apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
        curl gnupg libgfortran5 libgbm1 tzdata netcat \
        libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 \
        libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libx11-6 libx11-xcb1 libxcb1 \
        libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 \
        libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release \
        xdg-utils git build-essential ffmpeg python3 python3-pip python3-venv supervisor && \
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list && \
    apt-get update && \
    apt-get install -yq --no-install-recommends nodejs && \
    curl -LO https://github.com/yarnpkg/yarn/releases/download/v1.22.19/yarn_1.22.19_all.deb \
        && dpkg -i yarn_1.22.19_all.deb \
        && rm yarn_1.22.19_all.deb && \
    curl -LsSf https://astral.sh/uv/0.6.10/install.sh | sh && \
        mv /root/.local/bin/uv /usr/local/bin/uv && \
        mv /root/.local/bin/uvx /usr/local/bin/uvx && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create user and directories
RUN groupadd -g "$ARG_GID" anythingllm && \
    useradd -l -u "$ARG_UID" -m -d /app -s /bin/bash -g anythingllm anythingllm && \
    mkdir -p /app/server /app/frontend /app/collector /app/embed /app/prechat_widget && \
    chown -R anythingllm:anythingllm /app

# Copy and build frontend
COPY --chown=anythingllm:anythingllm ./frontend /app/frontend/
WORKDIR /app/frontend
USER anythingllm
RUN yarn install --network-timeout 300000 --network-concurrency 1 && \
    yarn build && \
    yarn cache clean

# Copy and setup server
WORKDIR /app/server
COPY --chown=anythingllm:anythingllm ./server /app/server/
RUN yarn install --production --network-timeout 300000 --network-concurrency 1 && \
    yarn cache clean

# Copy frontend build to server public directory
RUN cp -r /app/frontend/dist /app/server/public

# Copy and setup collector
WORKDIR /app/collector
COPY --chown=anythingllm:anythingllm ./collector /app/collector/
ENV PUPPETEER_DOWNLOAD_BASE_URL=https://storage.googleapis.com/chrome-for-testing-public
RUN yarn install --production --network-timeout 300000 --network-concurrency 1 && \
    yarn cache clean

# Copy and setup embed
WORKDIR /app/embed
COPY --chown=anythingllm:anythingllm ./embed /app/embed/
RUN yarn install --network-timeout 300000 --network-concurrency 1 && \
    yarn build && \
    yarn cache clean

# Setup prechat widget (Django)
WORKDIR /app/prechat_widget
COPY --chown=anythingllm:anythingllm ./prechat_widget /app/prechat_widget/
USER root
RUN python3 -m pip install --system --no-cache-dir -r requirements.txt
USER anythingllm
ENV PATH="/usr/local/bin:$PATH"
RUN python3 manage.py collectstatic --noinput && \
    python3 manage.py migrate

# Create supervisor configuration
USER root
RUN mkdir -p /var/log/supervisor
COPY --chown=root:root <<EOF /etc/supervisor/conf.d/anythingllm.conf
[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid

[program:server]
command=node index.js
directory=/app/server
user=anythingllm
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/server.log
stderr_logfile=/var/log/supervisor/server.log
environment=NODE_ENV=production,SERVER_PORT=3001

[program:collector]
command=node index.js
directory=/app/collector
user=anythingllm
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/collector.log
stderr_logfile=/var/log/supervisor/collector.log
environment=NODE_ENV=production,COLLECTOR_PORT=8888

[program:prechat-widget]
command=python3 manage.py runserver 0.0.0.0:9000
directory=/app/prechat_widget
user=anythingllm
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/prechat.log
stderr_logfile=/var/log/supervisor/prechat.log
environment=DJANGO_SETTINGS_MODULE=prechat_widget.settings
EOF

# Set environment variables
ENV NODE_ENV=production
ENV ANYTHING_LLM_RUNTIME=docker
ENV DEPLOYMENT_VERSION=1.8.5
ENV SERVER_PORT=3001
ENV COLLECTOR_PORT=8888

# Expose all ports
EXPOSE 3001 8888 9000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3001/api/ping || exit 1

# Start all services with supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/anythingllm.conf"]
